// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.6
// source: status.proto

package pb

import (
	config "github.com/NordSecurity/nordvpn-linux/config"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionSource int32

const (
	ConnectionSource_UNKNOWN_SOURCE ConnectionSource = 0
	ConnectionSource_MANUAL         ConnectionSource = 1
	ConnectionSource_AUTO           ConnectionSource = 2
)

// Enum value maps for ConnectionSource.
var (
	ConnectionSource_name = map[int32]string{
		0: "UNKNOWN_SOURCE",
		1: "MANUAL",
		2: "AUTO",
	}
	ConnectionSource_value = map[string]int32{
		"UNKNOWN_SOURCE": 0,
		"MANUAL":         1,
		"AUTO":           2,
	}
)

func (x ConnectionSource) Enum() *ConnectionSource {
	p := new(ConnectionSource)
	*p = x
	return p
}

func (x ConnectionSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionSource) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[0].Descriptor()
}

func (ConnectionSource) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[0]
}

func (x ConnectionSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionSource.Descriptor instead.
func (ConnectionSource) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

type ConnectionState int32

const (
	ConnectionState_UNKNOWN_STATE ConnectionState = 0
	ConnectionState_DISCONNECTED  ConnectionState = 1
	ConnectionState_CONNECTING    ConnectionState = 2
	ConnectionState_CONNECTED     ConnectionState = 3
)

// Enum value maps for ConnectionState.
var (
	ConnectionState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "DISCONNECTED",
		2: "CONNECTING",
		3: "CONNECTED",
	}
	ConnectionState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"DISCONNECTED":  1,
		"CONNECTING":    2,
		"CONNECTED":     3,
	}
)

func (x ConnectionState) Enum() *ConnectionState {
	p := new(ConnectionState)
	*p = x
	return p
}

func (x ConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[1].Descriptor()
}

func (ConnectionState) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[1]
}

func (x ConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionState.Descriptor instead.
func (ConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{1}
}

type ConnectionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source  ConnectionSource   `protobuf:"varint,1,opt,name=source,proto3,enum=pb.ConnectionSource" json:"source,omitempty"`
	Country string             `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	City    string             `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Group   config.ServerGroup `protobuf:"varint,4,opt,name=group,proto3,enum=config.ServerGroup" json:"group,omitempty"`
}

func (x *ConnectionParameters) Reset() {
	*x = ConnectionParameters{}
	mi := &file_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionParameters) ProtoMessage() {}

func (x *ConnectionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionParameters.ProtoReflect.Descriptor instead.
func (*ConnectionParameters) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionParameters) GetSource() ConnectionSource {
	if x != nil {
		return x.Source
	}
	return ConnectionSource_UNKNOWN_SOURCE
}

func (x *ConnectionParameters) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ConnectionParameters) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ConnectionParameters) GetGroup() config.ServerGroup {
	if x != nil {
		return x.Group
	}
	return config.ServerGroup(0)
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State           ConnectionState       `protobuf:"varint,1,opt,name=state,proto3,enum=pb.ConnectionState" json:"state,omitempty"`
	Technology      config.Technology     `protobuf:"varint,2,opt,name=technology,proto3,enum=config.Technology" json:"technology,omitempty"`
	Protocol        config.Protocol       `protobuf:"varint,3,opt,name=protocol,proto3,enum=config.Protocol" json:"protocol,omitempty"`
	Ip              string                `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostname        string                `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Country         string                `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	City            string                `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	Download        uint64                `protobuf:"varint,8,opt,name=download,proto3" json:"download,omitempty"`
	Upload          uint64                `protobuf:"varint,9,opt,name=upload,proto3" json:"upload,omitempty"`
	Uptime          int64                 `protobuf:"varint,10,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Name            string                `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	VirtualLocation bool                  `protobuf:"varint,12,opt,name=virtualLocation,proto3" json:"virtualLocation,omitempty"`
	Parameters      *ConnectionParameters `protobuf:"bytes,13,opt,name=parameters,proto3" json:"parameters,omitempty"`
	PostQuantum     bool                  `protobuf:"varint,14,opt,name=postQuantum,proto3" json:"postQuantum,omitempty"`
	IsMeshPeer      bool                  `protobuf:"varint,15,opt,name=is_mesh_peer,json=isMeshPeer,proto3" json:"is_mesh_peer,omitempty"`
	ByUser          bool                  `protobuf:"varint,16,opt,name=by_user,json=byUser,proto3" json:"by_user,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetState() ConnectionState {
	if x != nil {
		return x.State
	}
	return ConnectionState_UNKNOWN_STATE
}

func (x *StatusResponse) GetTechnology() config.Technology {
	if x != nil {
		return x.Technology
	}
	return config.Technology(0)
}

func (x *StatusResponse) GetProtocol() config.Protocol {
	if x != nil {
		return x.Protocol
	}
	return config.Protocol(0)
}

func (x *StatusResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StatusResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StatusResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StatusResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *StatusResponse) GetDownload() uint64 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *StatusResponse) GetUpload() uint64 {
	if x != nil {
		return x.Upload
	}
	return 0
}

func (x *StatusResponse) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *StatusResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusResponse) GetVirtualLocation() bool {
	if x != nil {
		return x.VirtualLocation
	}
	return false
}

func (x *StatusResponse) GetParameters() *ConnectionParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *StatusResponse) GetPostQuantum() bool {
	if x != nil {
		return x.PostQuantum
	}
	return false
}

func (x *StatusResponse) GetIsMeshPeer() bool {
	if x != nil {
		return x.IsMeshPeer
	}
	return false
}

func (x *StatusResponse) GetByUser() bool {
	if x != nil {
		return x.ByUser
	}
	return false
}

var File_status_proto protoreflect.FileDescriptor

var file_status_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x98, 0x04, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x0a, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x73,
	0x68, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x4d, 0x65, 0x73, 0x68, 0x50, 0x65, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x2a, 0x3c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e,
	0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x02, 0x2a,
	0x55, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x2f, 0x6e, 0x6f, 0x72, 0x64, 0x76, 0x70, 0x6e, 0x2d, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x2f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_status_proto_rawDescOnce sync.Once
	file_status_proto_rawDescData = file_status_proto_rawDesc
)

func file_status_proto_rawDescGZIP() []byte {
	file_status_proto_rawDescOnce.Do(func() {
		file_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_status_proto_rawDescData)
	})
	return file_status_proto_rawDescData
}

var file_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_status_proto_goTypes = []any{
	(ConnectionSource)(0),        // 0: pb.ConnectionSource
	(ConnectionState)(0),         // 1: pb.ConnectionState
	(*ConnectionParameters)(nil), // 2: pb.ConnectionParameters
	(*StatusResponse)(nil),       // 3: pb.StatusResponse
	(config.ServerGroup)(0),      // 4: config.ServerGroup
	(config.Technology)(0),       // 5: config.Technology
	(config.Protocol)(0),         // 6: config.Protocol
}
var file_status_proto_depIdxs = []int32{
	0, // 0: pb.ConnectionParameters.source:type_name -> pb.ConnectionSource
	4, // 1: pb.ConnectionParameters.group:type_name -> config.ServerGroup
	1, // 2: pb.StatusResponse.state:type_name -> pb.ConnectionState
	5, // 3: pb.StatusResponse.technology:type_name -> config.Technology
	6, // 4: pb.StatusResponse.protocol:type_name -> config.Protocol
	2, // 5: pb.StatusResponse.parameters:type_name -> pb.ConnectionParameters
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_status_proto_init() }
func file_status_proto_init() {
	if File_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_status_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_status_proto_goTypes,
		DependencyIndexes: file_status_proto_depIdxs,
		EnumInfos:         file_status_proto_enumTypes,
		MessageInfos:      file_status_proto_msgTypes,
	}.Build()
	File_status_proto = out.File
	file_status_proto_rawDesc = nil
	file_status_proto_goTypes = nil
	file_status_proto_depIdxs = nil
}
