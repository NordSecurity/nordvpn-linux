# Variables for reusability
x-common-variables: &common-variables
  WORKSPACE_DIR: /app
  GEN_STATUS_DIR: /app/gen_status
  GUI_PB_DIR: /app/gui/lib/pb
  GUI_PB_BACKUP_DIR: /app/gui/lib/pb.backup
  DAEMON_PB_DIR: daemon/pb/

services:
  # Generates Go protobuf files for the daemon
  app-protobuf-gen:
    image: ghcr.io/nordsecurity/nordvpn-linux/generator:1.4.2
    environment:
      <<: *common-variables
    volumes:
      - ../../..:/app
    working_dir: /app
    command:
      - sh
      - -c
      - |
        trap "exit 0" TERM
        ci/generate_protobuf.sh
        echo "app-protobuf-gen script finished successfully."
        mkdir -p $${GEN_STATUS_DIR}
        touch $${GEN_STATUS_DIR}/app_done
        sleep infinity & wait
    healthcheck:
      test: ["CMD", "test", "-f", "/app/gen_status/app_done"]
      interval: 5s
      retries: 6
      start_period: 30s

  # Generates Dart protobuf files for the GUI
  # Note: The generation script removes gui/lib/pb, so we backup before generation
  gui-protobuf-gen:
    image: ghcr.io/nordsecurity/nordvpn-linux/protobuf_dart-3.8.1:1.0.1
    environment:
      <<: *common-variables
    volumes:
      - ../../..:/app
    working_dir: /app
    command:
      - sh
      - -c
      - |
        trap "exit 0" TERM
        rm -f $${GEN_STATUS_DIR}/gui_done
        # Backup existing files before generation (script removes the directory)
        cp -r $${GUI_PB_DIR} $${GUI_PB_BACKUP_DIR} 2>/dev/null || true
        gui/scripts/generate_protobuf.sh
        echo "gui-protobuf-gen script finished successfully."
        mkdir -p $${GEN_STATUS_DIR}
        touch $${GEN_STATUS_DIR}/gui_done
        sleep infinity & wait
    healthcheck:
      test: ["CMD", "test", "-f", "/app/gen_status/gui_done"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 90s

  # Verifies that generated protobuf files match committed versions
  protochecker:
    image: alpine/git
    entrypoint: ["/bin/sh", "-c"]
    environment:
      <<: *common-variables
    volumes:
      - ../../..:/app
    working_dir: /app
    depends_on:
      app-protobuf-gen:
        condition: service_healthy
      gui-protobuf-gen:
        condition: service_healthy
    command:
      - |
        # Configure git to trust the workspace directory
        git config --global --add safe.directory $${WORKSPACE_DIR}

        echo "=== Checking for protobuf file changes ==="

        # Check GUI protobuf files (compare backup with generated)
        if [ -d "$${GUI_PB_BACKUP_DIR}" ]; then
          echo "Comparing GUI generated files with original committed files..."
          DIFF_OUTPUT=$(diff -r $${GUI_PB_BACKUP_DIR} $${GUI_PB_DIR} 2>&1 || true)

          if [ -n "$DIFF_OUTPUT" ]; then
            echo "ERROR: Generated GUI protobuf files differ from committed versions!"
            echo "$DIFF_OUTPUT" | grep "^Only in\|^Files.*differ" | head -20
            echo ""
            echo "To fix this, regenerate protobuf files locally and commit the changes."
            rm -rf $${GUI_PB_BACKUP_DIR}
            exit 1
          fi

          rm -rf $${GUI_PB_BACKUP_DIR}
          echo "✓ GUI protobuf files match"
        fi

        # Check daemon protobuf files (use git diff)
        if ! git diff --quiet --exit-code $${DAEMON_PB_DIR}; then
          echo "ERROR: Daemon protobuf files changed!"
          echo "Changed files:"
          git diff --name-only $${DAEMON_PB_DIR}
          echo ""
          echo "To fix this, regenerate protobuf files locally and commit the changes."
          exit 1
        fi
        echo "✓ Daemon protobuf files match"

        echo ""
        echo "SUCCESS: All protobuf files match committed versions."
