# analyse.yml defines jobs for doing static analysis.
include:
  - /ci/jobs/.cond.yml
  - project: group-security/blackduck
    file: /Scanning/SCA/NordVPN-sca-low_level_hacks-vpn-client-linux-nordvpn_app.yml
  - project: group-security/checkmarx
    file: /NordVPN/.checkmarx-nordvpn-linux-app.yml
blackduck-sca-prod: # comes from group-security/blackduck
  stage: analyse
  rules:
    - !reference [.cond/never, rules]
cx-scan: # comes from group-security/checkmarx
  stage: analyse
  rules:
    - !reference [.cond/never, rules]
cx-scan-schedule: # comes from group-security/checkmarx
  stage: analyse
  rules:
    - !reference [.cond/never, rules]
cx-scan-mr: # comes from group-security/checkmarx
  stage: analyse
  rules:
    - !reference [.cond/never, rules]
analyse/binaries:
  stage: analyse
  image: ghcr.io/nordsecurity/nordvpn-linux/scanner:1.0.0
  rules:
    - !reference [.cond/on-main, rules]
    - !reference [.cond/on-version-tag, rules]
  script: $CI_PROJECT_DIR/ci/hardening.sh
  dependencies:
    - build/binaries
    - build/openvpn
  parallel:
    matrix:
      - ARCH: [i386, amd64, armel, armhf, aarch64]
analyse/glibc:
  stage: analyse
  image: ghcr.io/nordsecurity/nordvpn-linux/builder:1.0.0
  rules:
    - !reference [.cond/on-main, rules]
    - !reference [.cond/on-version-tag, rules]
    - !reference [.cond/on-merge-request, rules]
  # When linking the application, `fcntl64` picks up oldest possible glibc version and `fcntl`
  # picks up the newest possible
  script: $CI_PROJECT_DIR/ci/glibc_version.sh 2.28
  dependencies:
    - build/binaries
    - build/openvpn
  parallel:
    matrix:
      - ARCH: [i386, amd64, armel, armhf, aarch64]
analyse/supply-chain:
  stage: analyse
  image: ghcr.io/nordsecurity/nordvpn-linux/blackduck:1.0.0
  rules:
    - !reference [.cond/on-version-tag, rules]
    - !reference [.cond/on-click, rules]
  script:
    - curl $DISCOVER_IP_URL
    - source $CI_PROJECT_DIR/ci/env.sh
    - !reference [blackduck-sca-prod, script]
  dependencies: []
  tags:
    - infra-docker
analyse/security2:
  stage: analyse
  rules:
    - !reference [.cond/on-main, rules]
    - !reference [.cond/on-version-tag, rules]
    - !reference [.cond/on-merge-request, rules]
  variables:
    GITLAB_TOKEN: ${CI_JOB_TOKEN}
  image: !reference [cx-scan, image]
  script: !reference [cx-scan, script]
  dependencies: []
  tags:
    - mountain-gitlab-runner
