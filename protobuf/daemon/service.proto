syntax = "proto3";

package pb;

option go_package = "github.com/NordSecurity/nordvpn-linux/daemon/pb";

import "account.proto";
import "cities.proto";
import "common.proto";
import "connect.proto";
import "login.proto";
import "logout.proto";
import "login_with_token.proto";
import "ping.proto";
import "rate.proto";
import "set.proto";
import "settings.proto";
import "status.proto";
import "token.proto";
import "purchase.proto";
import "state.proto";
import "servers.proto";
import "defaults.proto";

service Daemon {
  rpc AccountInfo(AccountRequest) returns (AccountResponse);
  rpc TokenInfo(Empty) returns (TokenInfoResponse);
  rpc Cities(CitiesRequest) returns (ServerGroupsList);
  rpc Connect(ConnectRequest) returns (stream Payload);
  rpc ConnectCancel(Empty) returns (Payload);
  rpc Countries(Empty) returns (ServerGroupsList);
  rpc Disconnect(Empty) returns (stream Payload);
  rpc Groups(Empty) returns (ServerGroupsList);
  rpc IsLoggedIn(Empty) returns (IsLoggedInResponse);
  rpc LoginWithToken(LoginWithTokenRequest) returns (LoginResponse);
  rpc LoginOAuth2(LoginOAuth2Request) returns (LoginOAuth2Response);
  rpc LoginOAuth2Callback(LoginOAuth2CallbackRequest) returns (LoginOAuth2CallbackResponse);
  rpc Logout(LogoutRequest) returns (Payload);
  rpc Ping(Empty) returns (PingResponse);
  rpc RateConnection(RateRequest) returns (Payload);
  rpc SetAutoConnect(SetAutoconnectRequest) returns (Payload);
  rpc SetThreatProtectionLite(SetThreatProtectionLiteRequest) returns (SetThreatProtectionLiteResponse);
  rpc SetDefaults(SetDefaultsRequest) returns (Payload);
  rpc SetDNS(SetDNSRequest) returns (SetDNSResponse);
  rpc SetFirewall(SetGenericRequest) returns (Payload);
  rpc SetFirewallMark(SetUint32Request) returns (Payload);
  rpc SetRouting(SetGenericRequest) returns (Payload);
  rpc SetAnalytics(SetGenericRequest) returns (Payload);
  rpc SetKillSwitch(SetKillSwitchRequest) returns (Payload);
  rpc SetNotify(SetNotifyRequest) returns (Payload);
  rpc SetTray(SetTrayRequest) returns (Payload);
  rpc SetObfuscate(SetGenericRequest) returns (Payload);
  rpc SetProtocol(SetProtocolRequest) returns (SetProtocolResponse);
  rpc SetTechnology(SetTechnologyRequest) returns (Payload);
  rpc SetLANDiscovery(SetLANDiscoveryRequest) returns (SetLANDiscoveryResponse);
  rpc SetAllowlist(SetAllowlistRequest) returns (Payload);
  rpc UnsetAllowlist(SetAllowlistRequest) returns (Payload);
  rpc UnsetAllAllowlist(Empty) returns (Payload);
  rpc Settings(Empty) returns (SettingsResponse);
  rpc SettingsProtocols(Empty) returns (Payload);
  rpc SettingsTechnologies(Empty) returns (Payload);
  rpc Status(Empty) returns (StatusResponse);
  rpc SetIpv6(SetGenericRequest) returns (Payload);
  rpc ClaimOnlinePurchase(Empty) returns(ClaimOnlinePurchaseResponse);
  rpc SetVirtualLocation(SetGenericRequest) returns (Payload);
  rpc SubscribeToStateChanges(Empty) returns (stream AppState);
  rpc GetServers(Empty) returns (ServersResponse);
  rpc SetPostQuantum(SetGenericRequest) returns (Payload);
  rpc GetDaemonApiVersion(GetDaemonApiVersionRequest) returns (GetDaemonApiVersionResponse);
}
