// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: invite.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RespondToInviteErrorCode defines the error of meshnet service
// response to the invitation response
type RespondToInviteErrorCode int32

const (
	// UNKNOWN defines that the exact error was not determined
	RespondToInviteErrorCode_UNKNOWN RespondToInviteErrorCode = 0
	// NO_SUCH_INVITATION defines that the request was not handled
	// successfully
	RespondToInviteErrorCode_NO_SUCH_INVITATION RespondToInviteErrorCode = 1
	// DEVICE_COUNT defines that no more devices can be added
	RespondToInviteErrorCode_DEVICE_COUNT RespondToInviteErrorCode = 2
)

// Enum value maps for RespondToInviteErrorCode.
var (
	RespondToInviteErrorCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "NO_SUCH_INVITATION",
		2: "DEVICE_COUNT",
	}
	RespondToInviteErrorCode_value = map[string]int32{
		"UNKNOWN":            0,
		"NO_SUCH_INVITATION": 1,
		"DEVICE_COUNT":       2,
	}
)

func (x RespondToInviteErrorCode) Enum() *RespondToInviteErrorCode {
	p := new(RespondToInviteErrorCode)
	*p = x
	return p
}

func (x RespondToInviteErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespondToInviteErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_proto_enumTypes[0].Descriptor()
}

func (RespondToInviteErrorCode) Type() protoreflect.EnumType {
	return &file_invite_proto_enumTypes[0]
}

func (x RespondToInviteErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespondToInviteErrorCode.Descriptor instead.
func (RespondToInviteErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{0}
}

// InviteResponseCode defines a response code specific to the
// invitation send action
type InviteResponseErrorCode int32

const (
	// ALREADY_EXISTS defines that the invitation to the specified
	// email already exists
	InviteResponseErrorCode_ALREADY_EXISTS InviteResponseErrorCode = 0
	// INVALID_EMAIL defines that the given email is invalid,
	// therefore, cannot receive an invitation
	InviteResponseErrorCode_INVALID_EMAIL InviteResponseErrorCode = 1
	// SAME_ACCOUNT_EMAIL defines that the given email is for the same account,
	// cannot send invite to myself
	InviteResponseErrorCode_SAME_ACCOUNT_EMAIL InviteResponseErrorCode = 2
	// LIMIT_REACHED defines that the weekly invitation limit (20)
	// has been reached
	InviteResponseErrorCode_LIMIT_REACHED InviteResponseErrorCode = 3
	// PEER_COUNT defines that no more devices can be invited
	InviteResponseErrorCode_PEER_COUNT InviteResponseErrorCode = 4
)

// Enum value maps for InviteResponseErrorCode.
var (
	InviteResponseErrorCode_name = map[int32]string{
		0: "ALREADY_EXISTS",
		1: "INVALID_EMAIL",
		2: "SAME_ACCOUNT_EMAIL",
		3: "LIMIT_REACHED",
		4: "PEER_COUNT",
	}
	InviteResponseErrorCode_value = map[string]int32{
		"ALREADY_EXISTS":     0,
		"INVALID_EMAIL":      1,
		"SAME_ACCOUNT_EMAIL": 2,
		"LIMIT_REACHED":      3,
		"PEER_COUNT":         4,
	}
)

func (x InviteResponseErrorCode) Enum() *InviteResponseErrorCode {
	p := new(InviteResponseErrorCode)
	*p = x
	return p
}

func (x InviteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_proto_enumTypes[1].Descriptor()
}

func (InviteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_invite_proto_enumTypes[1]
}

func (x InviteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteResponseErrorCode.Descriptor instead.
func (InviteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{1}
}

// GetInvitesResponse defines a response for GetInvites request
type GetInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetInvitesResponse_Invites
	//	*GetInvitesResponse_ServiceErrorCode
	//	*GetInvitesResponse_MeshnetErrorCode
	Response isGetInvitesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetInvitesResponse) Reset() {
	*x = GetInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitesResponse) ProtoMessage() {}

func (x *GetInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitesResponse.ProtoReflect.Descriptor instead.
func (*GetInvitesResponse) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{0}
}

func (m *GetInvitesResponse) GetResponse() isGetInvitesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetInvitesResponse) GetInvites() *InvitesList {
	if x, ok := x.GetResponse().(*GetInvitesResponse_Invites); ok {
		return x.Invites
	}
	return nil
}

func (x *GetInvitesResponse) GetServiceErrorCode() ServiceErrorCode {
	if x, ok := x.GetResponse().(*GetInvitesResponse_ServiceErrorCode); ok {
		return x.ServiceErrorCode
	}
	return ServiceErrorCode_NOT_LOGGED_IN
}

func (x *GetInvitesResponse) GetMeshnetErrorCode() MeshnetErrorCode {
	if x, ok := x.GetResponse().(*GetInvitesResponse_MeshnetErrorCode); ok {
		return x.MeshnetErrorCode
	}
	return MeshnetErrorCode_NOT_REGISTERED
}

type isGetInvitesResponse_Response interface {
	isGetInvitesResponse_Response()
}

type GetInvitesResponse_Invites struct {
	Invites *InvitesList `protobuf:"bytes,1,opt,name=invites,proto3,oneof"`
}

type GetInvitesResponse_ServiceErrorCode struct {
	ServiceErrorCode ServiceErrorCode `protobuf:"varint,2,opt,name=service_error_code,json=serviceErrorCode,proto3,enum=meshpb.ServiceErrorCode,oneof"`
}

type GetInvitesResponse_MeshnetErrorCode struct {
	MeshnetErrorCode MeshnetErrorCode `protobuf:"varint,3,opt,name=meshnet_error_code,json=meshnetErrorCode,proto3,enum=meshpb.MeshnetErrorCode,oneof"`
}

func (*GetInvitesResponse_Invites) isGetInvitesResponse_Response() {}

func (*GetInvitesResponse_ServiceErrorCode) isGetInvitesResponse_Response() {}

func (*GetInvitesResponse_MeshnetErrorCode) isGetInvitesResponse_Response() {}

// InvitesList defines the list of sent and received invitations
type InvitesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sent     []*Invite `protobuf:"bytes,1,rep,name=sent,proto3" json:"sent,omitempty"`
	Received []*Invite `protobuf:"bytes,2,rep,name=received,proto3" json:"received,omitempty"`
}

func (x *InvitesList) Reset() {
	*x = InvitesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitesList) ProtoMessage() {}

func (x *InvitesList) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitesList.ProtoReflect.Descriptor instead.
func (*InvitesList) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{1}
}

func (x *InvitesList) GetSent() []*Invite {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *InvitesList) GetReceived() []*Invite {
	if x != nil {
		return x.Received
	}
	return nil
}

// Invite defines the structure of the meshnet invite
type Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string               `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Os        string               `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *Invite) Reset() {
	*x = Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invite) ProtoMessage() {}

func (x *Invite) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invite.ProtoReflect.Descriptor instead.
func (*Invite) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{2}
}

func (x *Invite) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Invite) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Invite) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

// InviteRequest defines an accepting response request for a
// meshnet invitation
// InviteRequest is the same as the accepting to the invitation.
// Both specify the email and allow traffic flags
type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email is the email of the invitation sender
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// allowIncomingTraffic defines that another peer is allowed
	// to send traffic to this device
	AllowIncomingTraffic bool `protobuf:"varint,2,opt,name=allowIncomingTraffic,proto3" json:"allowIncomingTraffic,omitempty"`
	// AllowTrafficRouting defines that another peer is allowed to
	// route traffic through this device
	AllowTrafficRouting bool `protobuf:"varint,3,opt,name=allowTrafficRouting,proto3" json:"allowTrafficRouting,omitempty"`
	// AllowLocalNetwork defines that another peer is allowed to
	// access device's local network when routing traffic through this device
	AllowLocalNetwork bool `protobuf:"varint,4,opt,name=allowLocalNetwork,proto3" json:"allowLocalNetwork,omitempty"`
	// AllowLocalNetwork defines that another peer is allowed to send files to this device
	AllowFileshare bool `protobuf:"varint,5,opt,name=allowFileshare,proto3" json:"allowFileshare,omitempty"`
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{3}
}

func (x *InviteRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InviteRequest) GetAllowIncomingTraffic() bool {
	if x != nil {
		return x.AllowIncomingTraffic
	}
	return false
}

func (x *InviteRequest) GetAllowTrafficRouting() bool {
	if x != nil {
		return x.AllowTrafficRouting
	}
	return false
}

func (x *InviteRequest) GetAllowLocalNetwork() bool {
	if x != nil {
		return x.AllowLocalNetwork
	}
	return false
}

func (x *InviteRequest) GetAllowFileshare() bool {
	if x != nil {
		return x.AllowFileshare
	}
	return false
}

// DenyInviteRequest defines a denying response request for a meshnet
// invitation
type DenyInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email is the email of the invitation sender
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *DenyInviteRequest) Reset() {
	*x = DenyInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyInviteRequest) ProtoMessage() {}

func (x *DenyInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyInviteRequest.ProtoReflect.Descriptor instead.
func (*DenyInviteRequest) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{4}
}

func (x *DenyInviteRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// RespondToInviteResponse defines an empty gRPC response with the
// status
type RespondToInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RespondToInviteResponse_Empty
	//	*RespondToInviteResponse_RespondToInviteErrorCode
	//	*RespondToInviteResponse_ServiceErrorCode
	//	*RespondToInviteResponse_MeshnetErrorCode
	Response isRespondToInviteResponse_Response `protobuf_oneof:"response"`
}

func (x *RespondToInviteResponse) Reset() {
	*x = RespondToInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondToInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToInviteResponse) ProtoMessage() {}

func (x *RespondToInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToInviteResponse.ProtoReflect.Descriptor instead.
func (*RespondToInviteResponse) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{5}
}

func (m *RespondToInviteResponse) GetResponse() isRespondToInviteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondToInviteResponse) GetEmpty() *Empty {
	if x, ok := x.GetResponse().(*RespondToInviteResponse_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *RespondToInviteResponse) GetRespondToInviteErrorCode() RespondToInviteErrorCode {
	if x, ok := x.GetResponse().(*RespondToInviteResponse_RespondToInviteErrorCode); ok {
		return x.RespondToInviteErrorCode
	}
	return RespondToInviteErrorCode_UNKNOWN
}

func (x *RespondToInviteResponse) GetServiceErrorCode() ServiceErrorCode {
	if x, ok := x.GetResponse().(*RespondToInviteResponse_ServiceErrorCode); ok {
		return x.ServiceErrorCode
	}
	return ServiceErrorCode_NOT_LOGGED_IN
}

func (x *RespondToInviteResponse) GetMeshnetErrorCode() MeshnetErrorCode {
	if x, ok := x.GetResponse().(*RespondToInviteResponse_MeshnetErrorCode); ok {
		return x.MeshnetErrorCode
	}
	return MeshnetErrorCode_NOT_REGISTERED
}

type isRespondToInviteResponse_Response interface {
	isRespondToInviteResponse_Response()
}

type RespondToInviteResponse_Empty struct {
	Empty *Empty `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type RespondToInviteResponse_RespondToInviteErrorCode struct {
	RespondToInviteErrorCode RespondToInviteErrorCode `protobuf:"varint,2,opt,name=respond_to_invite_error_code,json=respondToInviteErrorCode,proto3,enum=meshpb.RespondToInviteErrorCode,oneof"`
}

type RespondToInviteResponse_ServiceErrorCode struct {
	ServiceErrorCode ServiceErrorCode `protobuf:"varint,3,opt,name=service_error_code,json=serviceErrorCode,proto3,enum=meshpb.ServiceErrorCode,oneof"`
}

type RespondToInviteResponse_MeshnetErrorCode struct {
	MeshnetErrorCode MeshnetErrorCode `protobuf:"varint,4,opt,name=meshnet_error_code,json=meshnetErrorCode,proto3,enum=meshpb.MeshnetErrorCode,oneof"`
}

func (*RespondToInviteResponse_Empty) isRespondToInviteResponse_Response() {}

func (*RespondToInviteResponse_RespondToInviteErrorCode) isRespondToInviteResponse_Response() {}

func (*RespondToInviteResponse_ServiceErrorCode) isRespondToInviteResponse_Response() {}

func (*RespondToInviteResponse_MeshnetErrorCode) isRespondToInviteResponse_Response() {}

// InviteResponse defines the response to the invite send
type InviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*InviteResponse_Empty
	//	*InviteResponse_InviteResponseErrorCode
	//	*InviteResponse_ServiceErrorCode
	//	*InviteResponse_MeshnetErrorCode
	Response isInviteResponse_Response `protobuf_oneof:"response"`
}

func (x *InviteResponse) Reset() {
	*x = InviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResponse) ProtoMessage() {}

func (x *InviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResponse.ProtoReflect.Descriptor instead.
func (*InviteResponse) Descriptor() ([]byte, []int) {
	return file_invite_proto_rawDescGZIP(), []int{6}
}

func (m *InviteResponse) GetResponse() isInviteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *InviteResponse) GetEmpty() *Empty {
	if x, ok := x.GetResponse().(*InviteResponse_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *InviteResponse) GetInviteResponseErrorCode() InviteResponseErrorCode {
	if x, ok := x.GetResponse().(*InviteResponse_InviteResponseErrorCode); ok {
		return x.InviteResponseErrorCode
	}
	return InviteResponseErrorCode_ALREADY_EXISTS
}

func (x *InviteResponse) GetServiceErrorCode() ServiceErrorCode {
	if x, ok := x.GetResponse().(*InviteResponse_ServiceErrorCode); ok {
		return x.ServiceErrorCode
	}
	return ServiceErrorCode_NOT_LOGGED_IN
}

func (x *InviteResponse) GetMeshnetErrorCode() MeshnetErrorCode {
	if x, ok := x.GetResponse().(*InviteResponse_MeshnetErrorCode); ok {
		return x.MeshnetErrorCode
	}
	return MeshnetErrorCode_NOT_REGISTERED
}

type isInviteResponse_Response interface {
	isInviteResponse_Response()
}

type InviteResponse_Empty struct {
	Empty *Empty `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type InviteResponse_InviteResponseErrorCode struct {
	InviteResponseErrorCode InviteResponseErrorCode `protobuf:"varint,2,opt,name=invite_response_error_code,json=inviteResponseErrorCode,proto3,enum=meshpb.InviteResponseErrorCode,oneof"`
}

type InviteResponse_ServiceErrorCode struct {
	ServiceErrorCode ServiceErrorCode `protobuf:"varint,3,opt,name=service_error_code,json=serviceErrorCode,proto3,enum=meshpb.ServiceErrorCode,oneof"`
}

type InviteResponse_MeshnetErrorCode struct {
	MeshnetErrorCode MeshnetErrorCode `protobuf:"varint,4,opt,name=meshnet_error_code,json=meshnetErrorCode,proto3,enum=meshpb.MeshnetErrorCode,oneof"`
}

func (*InviteResponse_Empty) isInviteResponse_Response() {}

func (*InviteResponse_InviteResponseErrorCode) isInviteResponse_Response() {}

func (*InviteResponse_ServiceErrorCode) isInviteResponse_Response() {}

func (*InviteResponse_MeshnetErrorCode) isInviteResponse_Response() {}

var File_invite_proto protoreflect.FileDescriptor

var file_invite_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x1a, 0x0b, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48,
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x22, 0xe1,
	0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x44, 0x65, 0x6e, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xc4, 0x02,
	0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x62, 0x0a, 0x1c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48,
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e,
	0x0a, 0x1a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48,
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x68,
	0x6e, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x73, 0x68, 0x6e, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x51,
	0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x53, 0x55,
	0x43, 0x48, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x02, 0x2a, 0x7b, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4d, 0x41, 0x49,
	0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x6f, 0x72,
	0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x6e, 0x6f, 0x72, 0x64, 0x76, 0x70,
	0x6e, 0x2d, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x74, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invite_proto_rawDescOnce sync.Once
	file_invite_proto_rawDescData = file_invite_proto_rawDesc
)

func file_invite_proto_rawDescGZIP() []byte {
	file_invite_proto_rawDescOnce.Do(func() {
		file_invite_proto_rawDescData = protoimpl.X.CompressGZIP(file_invite_proto_rawDescData)
	})
	return file_invite_proto_rawDescData
}

var file_invite_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_invite_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_invite_proto_goTypes = []interface{}{
	(RespondToInviteErrorCode)(0),   // 0: meshpb.RespondToInviteErrorCode
	(InviteResponseErrorCode)(0),    // 1: meshpb.InviteResponseErrorCode
	(*GetInvitesResponse)(nil),      // 2: meshpb.GetInvitesResponse
	(*InvitesList)(nil),             // 3: meshpb.InvitesList
	(*Invite)(nil),                  // 4: meshpb.Invite
	(*InviteRequest)(nil),           // 5: meshpb.InviteRequest
	(*DenyInviteRequest)(nil),       // 6: meshpb.DenyInviteRequest
	(*RespondToInviteResponse)(nil), // 7: meshpb.RespondToInviteResponse
	(*InviteResponse)(nil),          // 8: meshpb.InviteResponse
	(ServiceErrorCode)(0),           // 9: meshpb.ServiceErrorCode
	(MeshnetErrorCode)(0),           // 10: meshpb.MeshnetErrorCode
	(*timestamp.Timestamp)(nil),     // 11: google.protobuf.Timestamp
	(*Empty)(nil),                   // 12: meshpb.Empty
}
var file_invite_proto_depIdxs = []int32{
	3,  // 0: meshpb.GetInvitesResponse.invites:type_name -> meshpb.InvitesList
	9,  // 1: meshpb.GetInvitesResponse.service_error_code:type_name -> meshpb.ServiceErrorCode
	10, // 2: meshpb.GetInvitesResponse.meshnet_error_code:type_name -> meshpb.MeshnetErrorCode
	4,  // 3: meshpb.InvitesList.sent:type_name -> meshpb.Invite
	4,  // 4: meshpb.InvitesList.received:type_name -> meshpb.Invite
	11, // 5: meshpb.Invite.expires_at:type_name -> google.protobuf.Timestamp
	12, // 6: meshpb.RespondToInviteResponse.empty:type_name -> meshpb.Empty
	0,  // 7: meshpb.RespondToInviteResponse.respond_to_invite_error_code:type_name -> meshpb.RespondToInviteErrorCode
	9,  // 8: meshpb.RespondToInviteResponse.service_error_code:type_name -> meshpb.ServiceErrorCode
	10, // 9: meshpb.RespondToInviteResponse.meshnet_error_code:type_name -> meshpb.MeshnetErrorCode
	12, // 10: meshpb.InviteResponse.empty:type_name -> meshpb.Empty
	1,  // 11: meshpb.InviteResponse.invite_response_error_code:type_name -> meshpb.InviteResponseErrorCode
	9,  // 12: meshpb.InviteResponse.service_error_code:type_name -> meshpb.ServiceErrorCode
	10, // 13: meshpb.InviteResponse.meshnet_error_code:type_name -> meshpb.MeshnetErrorCode
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_invite_proto_init() }
func file_invite_proto_init() {
	if File_invite_proto != nil {
		return
	}
	file_empty_proto_init()
	file_service_response_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_invite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenyInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondToInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_invite_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GetInvitesResponse_Invites)(nil),
		(*GetInvitesResponse_ServiceErrorCode)(nil),
		(*GetInvitesResponse_MeshnetErrorCode)(nil),
	}
	file_invite_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*RespondToInviteResponse_Empty)(nil),
		(*RespondToInviteResponse_RespondToInviteErrorCode)(nil),
		(*RespondToInviteResponse_ServiceErrorCode)(nil),
		(*RespondToInviteResponse_MeshnetErrorCode)(nil),
	}
	file_invite_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*InviteResponse_Empty)(nil),
		(*InviteResponse_InviteResponseErrorCode)(nil),
		(*InviteResponse_ServiceErrorCode)(nil),
		(*InviteResponse_MeshnetErrorCode)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invite_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_invite_proto_goTypes,
		DependencyIndexes: file_invite_proto_depIdxs,
		EnumInfos:         file_invite_proto_enumTypes,
		MessageInfos:      file_invite_proto_msgTypes,
	}.Build()
	File_invite_proto = out.File
	file_invite_proto_rawDesc = nil
	file_invite_proto_goTypes = nil
	file_invite_proto_depIdxs = nil
}
